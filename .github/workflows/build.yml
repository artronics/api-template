name: CI

on:
  push:
    branches:
      - master
      - AMB-*
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/yarn.lock') }}

      - name: Cache npm modules
        uses: actions/cache@v2
        env:
          cache-name: cache-npm-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn run build

      - name: Test
        run: yarn run test

  provision-apigee:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      APIGEE_USER: ${{ secrets.APIGEE_USER }}

    steps:
      - uses: actions/checkout@v2

      - name: Get apigee token
        id: apigeetoken
        env:
          APIGEE_PASSWORD: '${{ secrets.APIGEE_PASSWORD }}'
        uses: artronics/apigee-token-action@master

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Install apigee terraform provider
        run: |
          wget -q https://github.com/NHSDigital/terraform-provider-apigee/releases/download/v0.0.27/terraform-provider-apigee_0.0.27_linux_amd64.tar.gz
          mkdir -p ~/.terraform.d/plugins/linux_amd64
          tar xzf terraform-provider-apigee_0.0.27_linux_amd64.tar.gz -C ~/.terraform.d/plugins/linux_amd64

      - name: Terraform init
        run: terraform init -input=false -backend-config="key=api-template/test/tfstate.json" ./terraform

      - name: Terraform plan
        run: terraform plan -input=false -var="env=test" -var="apigee_user=${APIGEE_USER}" -var="apigee_access_token=${{ add-mask::steps.apigeetoken.outputs.token }}" ./terraform

      - name: Terraform apply
        run: terraform apply -input=false -auto-approve -var="env=test" -var="apigee_user=${APIGEE_USER}" -var="apigee_access_token=${{ add-mask::steps.apigeetoken.outputs.token }}" ./terraform
